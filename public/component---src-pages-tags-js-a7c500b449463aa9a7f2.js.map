{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["Tags","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","title","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","style","background","_components_Section__WEBPACK_IMPORTED_MODULE_5__","heading","this","props","data","allMarkdownRemark","group","map","tag","i","margin","display","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","fieldValue","key","_components_Buttons__WEBPACK_IMPORTED_MODULE_7__","as","totalCount","React","Component","pageQuery"],"mappings":"4OAQMA,4FACJC,OAAA,WAGE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAJU,IAKVJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,MANQ,GAORE,SANW,KAOXN,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,WAAY,wDACvBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAaC,QAAS,QACpBV,EAAAC,EAAAC,cAAA,WACCS,KAAKC,MAAMC,KAAKC,kBAAkBC,MAAMC,IAAI,SAACC,EAAKC,GAAN,OAC3ClB,EAAAC,EAAAC,cAAA,QAAMK,MAAO,CAACY,OAAQ,cAAeC,QAAS,iBAC5CpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAE,SAAWC,IAAUN,EAAIO,YAAzB,IAAyCC,IAAKP,GACpDlB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYC,GAAI,QAASV,EAAIO,WAA7B,KAA2CP,EAAIW,WAA/C,iBAhBDC,IAAMC,WA4BZC,EAAS,aAkBPjC","file":"component---src-pages-tags-js-a7c500b449463aa9a7f2.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport {SectionText} from '../components/Section'\nimport kebabCase from 'lodash/kebabCase'\nimport {BtnPrimary} from '../components/Buttons'\n\nclass Tags extends React.Component {\n  render () {\n    const title = \"\"\n    const keywords = []\n    return (\n      <Layout\n        title={title}>\n        <SEO\n          title={title}\n          keywords={keywords} />\n          <div style={{background: 'linear-gradient(var(--body-bg-alt), var(--body-bg))'}}>\n            <SectionText heading={'Tags'}>\n              <div>\n              {this.props.data.allMarkdownRemark.group.map((tag, i) => (\n                <span style={{margin: '.2rem .2rem', display: 'inline-block'}}>\n                  <Link to={`/tags/${kebabCase(tag.fieldValue)}/`} key={i}>\n                    <BtnPrimary as={'span'}>{tag.fieldValue} ({tag.totalCount})</BtnPrimary>\n                  </Link>\n                </span>\n              ))}\n              </div>\n            </SectionText>\n          </div>            \n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags\n"],"sourceRoot":""}